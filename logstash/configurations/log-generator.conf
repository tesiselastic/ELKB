input {
    beats {
        port => 5044
        add_field => {"application" => "log-generator"}
        id => "log-generator-beats"
    }
}

filter {
    if [application] == "log-generator" {
        grok {
            patterns_dir => "patterns"
            match => {"message" => [
                "%{COMMON_LOG} %{WORD:type}\|%{NUMBER:responseCode:int}\|%{USERNAME:user}\|%{IP:ip}",
                "%{COMMON_LOG} %{WORD:type}\|%{NUMBER:duration:float}\|%{DATA:action}\|%{WORD:status}\|%{USERNAME:user}",
                "%{COMMON_LOG} %{DATA:description}\|%{GREEDYDATA:stacktrace}"
            ]}

            id => "grok-log-generator"
        }

        mutate {
            remove_field => ["message", "prospector", "input"]
            rename => {"@timestamp" => "processTime"}
            id => "remove-fields-log-generator"
        }

        if ![type] {
            mutate {
                add_field => {"type" => "JAVA_ERROR"}
                id => "add-java-error-type"
            }
        }

        if [type] == "LOGIN" {
            mutate {
                add_field => {"login" => true}
                id => "set-login-true"
            }

            if [responseCode] > 300 {
                mutate {
                    replace => {"login" => false}
                    id => "set-login-false"
                }
            }

            translate {
                field => "responseCode"
                destination => "responseText"
                dictionary => {
                    "200" => "Login correcto"
                    "201" => "Login correcto tras varios intentos"
                    "202" => "Login con actualizaci칩n de password"
                    "204" => "Login autom치tico"
                    "250" => "Login recordado"
                    "100" => "Usuario suplantado"
                    "150" => "Usuario suplantado autom치ticamente"
                    "400" => "Usuario bloqueado"
                    "404" => "Usuario no encontrado"
                    "500" => "Contrase침a expirada"
                }
                id => "translate-status-codes"
            }

            geoip {
                source => "ip"
                id => "geo-ip-log-generator"
            }
        }

        date {
            match => [ "date", "YYYY-MM-dd HH:mm:ss" ]
            id => "set-date-as-timestamp"
        }
    }
}

output {
    if [application] == "log-generator" {
        if "_grokparsefailure" not in [tags] {
            elasticsearch {
                hosts => "localhost:9200"
                index => "log-generator-%{+YYYY.MM.dd}"
                id => "elasticsearch-log-generator"
                template_name => "log-generator"
                template => "/Users/ballesterosam/Personal/training/elasticstack/logstash-6.3.1/templates/log-generator.json"
            }
        } else {
            stdout {
                id => "stdout-error"
            }
        }
    }
}